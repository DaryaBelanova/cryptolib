#ifndef CRYPTOLIB_KEXP15TEST_H
#define CRYPTOLIB_KEXP15TEST_H

#include <vector>
#include <array>
#include "../../ReferenceImplementations/ciphersuite/Magma.h"
#include "../../ReferenceImplementations/ciphersuite/Kuznyechik.h"
#include "../../ReferenceImplementations/kexp15kimp15/KExp15.h"

class KExp15Test {

public:

	KExp15Test();

	void assert_export_key_magma();

	void assert_export_key_kuznyechik();

	void assert_import_key_magma();

	void assert_import_key_kuznyechik();

	void assert_all_functions();

private:

	KExp15<Magma> kexp15_magma_;
	KExp15<Kuznyechik> kexp15_kuznyechik_;

	inline static const std::vector<uint8_t> key_ = { 0x88,0x99,0xaa,0xbb,0xcc,0xdd,0xee,0xff,0x00,0x11,0x22,0x33,0x44,0x55,0x66,0x77,0xfe,0xdc,0xba,0x98,0x76,0x54,0x32,0x10,0x01,0x23,0x45,0x67,0x89,0xab,0xcd,0xef };

	static constexpr std::array<uint8_t, 32> k_mac_ = { 0x08,0x09,0x0a,0x0b,0x0c,0x0d,0x0e,0x0f,0x00,0x01,0x02,0x03,0x04,0x05,0x06,0x07,0x10,0x11,0x12,0x13,0x14,0x15,0x16,0x17,0x18,0x19,0x1a,0x1b,0x1c,0x1d,0x1e,0x1f };

	static constexpr std::array<uint8_t, 32> k_enc_ = { 0x20,0x21,0x22,0x23,0x24,0x25,0x26,0x27,0x28,0x29,0x2a,0x2b,0x2c,0x2d,0x2e,0x2f,0x38,0x39,0x3a,0x3b,0x3c,0x3d,0x3e,0x3f,0x30,0x31,0x32,0x33,0x34,0x35,0x36,0x37 };

	// magma
	inline static const std::vector<uint8_t> iv_magma_ = { 0x67, 0xbe, 0xd6, 0x54 };

	inline static const std::vector<uint8_t> keymac_magma_ = { 0x75, 0xa7, 0x66, 0x18, 0xe9, 0x0f, 0x49, 0x73 };

	inline static const std::vector<uint8_t> kexp_magma_ = { 0xcf,0xd5,0xa1,0x2d,0x5b,0x81,0xb6,0xe1,0xe9,0x9c,0x91,0x6d,0x07,0x90,0x0c,0x6a,0xc1,0x27,0x03,0xfb,0x3a,0xbd,0xed,0x55,0x56,0x7b,0xf3,0x74,0x2c,0x89,0x9c,0x75,0x5d,0xaf,0xe7,0xb4,0x2e,0x3a,0x8b,0xd9 };

	// kuznyechik
	inline static const std::vector<uint8_t> iv_kuznyechik_ = { 0x09, 0x09, 0x47, 0x2d, 0xd9, 0xf2, 0x6b, 0xe8 };

	inline static const std::vector<uint8_t> keymac_kuznyechik_ = { 0x10, 0x02, 0x2a, 0xde, 0x94, 0xee, 0x55, 0xb4, 0x34, 0xd2, 0x07, 0x7f, 0x5a, 0x13, 0xaf, 0xf4 };

	inline static const std::vector<uint8_t> kexp_kuznyechik_ = { 0xe3,0x61,0x84,0xe8,0x4e,0x8d,0x73,0x6f,0xf3,0x6c,0xc2,0xe5,0xae,0x06,0x5d,0xc6,0x56,0xb2,0x3c,0x20,0xf5,0x49,0xb0,0x2f,0xdf,0xf8,0x8e,0x1f,0x3f,0x30,0xd8,0xc2,0x9a,0x53,0xf3,0xca,0x55,0x4d,0xba,0xd8,0x0d,0xe1,0x52,0xb9,0xa4,0x62,0x5b,0x32 };
};

#endif //CRYPTOLIB_KEXP15TEST_H