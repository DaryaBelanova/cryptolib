#ifndef CRYPTOLIB_ECBTEST_H
#define CRYPTOLIB_ECBTEST_H

#include "../../src/ciphermodes/ECB.h"
#include "../../src/ciphersuite/Kuznyechik.h"
#include "../../src/ciphersuite/Magma.h"

class ECBTest {

public:

    ECBTest();

    void assert_encrypt128();

    void assert_decrypt128();

    void assert_encrypt64();

    void assert_decrypt64();

    void assert_all_functions();

private:

    Kuznyechik alg128_;
    Magma alg64_;
    ECB<Kuznyechik> ecb128_;
    ECB<Magma> ecb64_;

    // 128-bit blocks
    static constexpr std::array<uint8_t, Kuznyechik::byte_block_size * 2> key128_ = {0x88, 0x99, 0xaa, 0xbb, 0xcc, 0xdd, 0xee, 0xff, 0x00, 0x11, 0x22, 0x33, 0x44, 0x55, 0x66, 0x77,
                                  0xfe, 0xdc, 0xba, 0x98, 0x76, 0x54, 0x32, 0x10, 0x01, 0x23, 0x45, 0x67, 0x89, 0xab, 0xcd, 0xef };

    inline static const std::vector<uint8_t> plain_flow128_ = {
            0x11,0x22,0x33,0x44,0x55,0x66,0x77,0x00,0xff,0xee,0xdd,0xcc,0xbb,0xaa,0x99,0x88,
            0x00,0x11,0x22,0x33,0x44,0x55,0x66,0x77,0x88,0x99,0xaa,0xbb,0xcc,0xee,0xff,0x0a,
            0x11,0x22,0x33,0x44,0x55,0x66,0x77,0x88,0x99,0xaa,0xbb,0xcc,0xee,0xff,0x0a,0x00,
            0x22,0x33,0x44,0x55,0x66,0x77,0x88,0x99,0xaa,0xbb,0xcc,0xee,0xff,0x0a,0x00,0x11
    } ;

    inline static const std::vector<uint8_t> cipher_flow128_ = {
            0x7f,0x67,0x9d,0x90,0xbe,0xbc,0x24,0x30,0x5a,0x46,0x8d,0x42,0xb9,0xd4,0xed,0xcd,
            0xb4,0x29,0x91,0x2c,0x6e,0x00,0x32,0xf9,0x28,0x54,0x52,0xd7,0x67,0x18,0xd0,0x8b,
            0xf0,0xca,0x33,0x54,0x9d,0x24,0x7c,0xee,0xf3,0xf5,0xa5,0x31,0x3b,0xd4,0xb1,0x57,
            0xd0,0xb0,0x9c,0xcd,0xe8,0x30,0xb9,0xeb,0x3a,0x02,0xc4,0xc5,0xaa,0x8a,0xda,0x98
    };


    // 64-bit blocks
    static constexpr std::array<uint8_t, Magma::byte_block_size * 4> key64_ = { 0xff, 0xee, 0xdd, 0xcc, 0xbb, 0xaa, 0x99, 0x88, 0x77, 0x66, 0x55, 0x44, 0x33, 0x22, 0x11, 0x00, 0xf0,
                                  0xf1, 0xf2, 0xf3, 0xf4, 0xf5, 0xf6, 0xf7, 0xf8, 0xf9, 0xfa, 0xfb, 0xfc, 0xfd, 0xfe, 0xff };

    inline static const std::vector<uint8_t> plain_flow64_ = {
            0x92,0xde,0xf0,0x6b,0x3c,0x13,0x0a,0x59,
            0xdb,0x54,0xc7,0x04,0xf8,0x18,0x9d,0x20,
            0x4a,0x98,0xfb,0x2e,0x67,0xa8,0x02,0x4c,
            0x89,0x12,0x40,0x9b,0x17,0xb5,0x7e,0x41
    };

    inline static const std::vector<uint8_t> cipher_flow64_ = {
            0x2b,0x07,0x3f,0x04,0x94,0xf3,0x72,0xa0,
            0xde,0x70,0xe7,0x15,0xd3,0x55,0x6e,0x48,
            0x11,0xd8,0xd9,0xe9,0xea,0xcf,0xbc,0x1e,
            0x7c,0x68,0x26,0x09,0x96,0xc6,0x7e,0xfb
    };
};

#endif CRYPTOLIB_ECBTEST_H